/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafic.interfac;

import Controller.BaseLocacao;
import DAO.LocacaoDAO;
import DAO.listaDAO;
import classes.ClsInformaFinanceiro;
import classes.clsaux;
import conexoes.conexao;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

import javax.swing.JDialog;

import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import model.Tfatura_locacao;
import model.Titens_locacao;
import model.Tlocacao;
import model.clsDadosEmpresa;
import model.clsDadosPagamentoAdm;
import model.tlocacao_pagamento;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.CriaMenuOpcoes;
/**
 *
 * @author Rodrigo
 */
public class CRUDlocacoes extends javax.swing.JDialog {

    /**
     * Creates new form CRUDlocacoes
     */
    public CRUDlocacoes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.inicia();
    }

    
    List<Titens_locacao> itens= new ArrayList<>();
    List<Tfatura_locacao> listapag= new ArrayList<>();
    Tlocacao loc= new Tlocacao();
    List<tlocacao_pagamento> pagamentos= new ArrayList<>();
    LocacaoDAO dao = new LocacaoDAO();
    List<Tfatura_locacao> fatura= new ArrayList<>();
    Titens_locacao ite;
    DefaultListModel lista= new DefaultListModel();
    String tipoBaixa="";
   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tbInf = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbItensLocacao = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbMovFatura = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbFina = new javax.swing.JComboBox<>();
        txtinformado = new javax.swing.JTextField();
        btnConfirma = new javax.swing.JButton();
        txtcalc = new javax.swing.JTextField();
        txtlanc = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaPagamento = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        lbTroco = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        txtAcresc = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtValorPago = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbLocacoes = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        btnMarcaTodos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cbfiltro = new javax.swing.JComboBox<>();
        txtpesq = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnPesq = new javax.swing.JButton();
        ftini = new javax.swing.JFormattedTextField();
        ftfim = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Locação Equipamentos");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel3.setBackground(new java.awt.Color(219, 227, 227));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(145, 182, 182));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 51));
        jLabel7.setText("Locações De Equipamentos");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/locaxaoMenuGrande.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbItensLocacao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbItensLocacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Indice", "Codigo", "Descricao", "Per. Infor", "Tipo Cobranca", "Valor", "Qnt Pecas", "Total", "Permanencia", "Data Retirada", "Data Retorno", "Valor Pago", "Serie", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbItensLocacao.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbItensLocacao.setRowHeight(20);
        tbItensLocacao.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbItensLocacao);
        if (tbItensLocacao.getColumnModel().getColumnCount() > 0) {
            tbItensLocacao.getColumnModel().getColumn(0).setPreferredWidth(50);
            tbItensLocacao.getColumnModel().getColumn(1).setPreferredWidth(50);
            tbItensLocacao.getColumnModel().getColumn(2).setPreferredWidth(150);
            tbItensLocacao.getColumnModel().getColumn(3).setResizable(false);
            tbItensLocacao.getColumnModel().getColumn(3).setPreferredWidth(300);
            tbItensLocacao.getColumnModel().getColumn(4).setPreferredWidth(60);
            tbItensLocacao.getColumnModel().getColumn(5).setPreferredWidth(100);
            tbItensLocacao.getColumnModel().getColumn(6).setPreferredWidth(100);
            tbItensLocacao.getColumnModel().getColumn(7).setPreferredWidth(80);
            tbItensLocacao.getColumnModel().getColumn(8).setPreferredWidth(100);
            tbItensLocacao.getColumnModel().getColumn(10).setPreferredWidth(200);
            tbItensLocacao.getColumnModel().getColumn(11).setResizable(false);
            tbItensLocacao.getColumnModel().getColumn(11).setPreferredWidth(120);
            tbItensLocacao.getColumnModel().getColumn(12).setPreferredWidth(80);
            tbItensLocacao.getColumnModel().getColumn(13).setPreferredWidth(250);
            tbItensLocacao.getColumnModel().getColumn(14).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 933, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        tbInf.addTab("Itens Locacao", jPanel4);

        tbMovFatura.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbMovFatura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "X", "Id Fatura", "Data Gerado", "Valor", "Pago", "Referencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMovFatura.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbMovFatura.setRowHeight(20);
        tbMovFatura.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tbMovFatura);
        if (tbMovFatura.getColumnModel().getColumnCount() > 0) {
            tbMovFatura.getColumnModel().getColumn(0).setResizable(false);
            tbMovFatura.getColumnModel().getColumn(0).setPreferredWidth(50);
            tbMovFatura.getColumnModel().getColumn(1).setPreferredWidth(80);
            tbMovFatura.getColumnModel().getColumn(2).setPreferredWidth(150);
            tbMovFatura.getColumnModel().getColumn(3).setPreferredWidth(90);
            tbMovFatura.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbMovFatura.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(284, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbInf.addTab("Faturas Geradas", jPanel8);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Incluir Pagamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel8.setText("Valor Calc.");

        jLabel9.setText("Valor Lanc.");

        jLabel10.setText("Total:");

        txtinformado.setEditable(false);
        txtinformado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinformadoActionPerformed(evt);
            }
        });

        btnConfirma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Confirma.png"))); // NOI18N
        btnConfirma.setText("Confirmar");
        btnConfirma.setEnabled(false);
        btnConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaActionPerformed(evt);
            }
        });

        txtcalc.setEditable(false);
        txtcalc.setText("0,00");

        txtlanc.setEditable(false);
        txtlanc.setText("0,00");

        txtTotal.setEditable(false);
        txtTotal.setText("0,00");

        jLabel11.setText("Finalizadora:");

        jLabel12.setText("Valor Pago");

        jScrollPane1.setViewportView(listaPagamento);

        jLabel13.setText("Valores Recebidos");

        lbTroco.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel14.setText("Desconto:");

        txtDesconto.setText("0,00");

        txtAcresc.setText("0,00");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Acres.");
        jLabel15.setToolTipText("");

        txtValorPago.setEditable(false);
        txtValorPago.setText("0,00");

        jLabel16.setText("Valor Pago");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/maispdv.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbTroco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbFina, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(txtinformado, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtlanc)
                                    .addComponent(txtcalc, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(txtValorPago, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                .addGap(25, 25, 25)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(txtAcresc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDesconto, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(20, 20, 20))
                            .addComponent(btnConfirma, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtcalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtlanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(txtAcresc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbFina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtinformado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnConfirma)
                    .addComponent(lbTroco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(411, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbInf.addTab("Pagamentos", jPanel9);

        tbLocacoes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbLocacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Id", "Parceiro", "Data Lancamento", "Data Retirada", "Data Prevista Retorno", "Valor Orig.", "Valor Faturado", "Valor Restante", "Estado", "Responsavel", "Fone Responsavel", "Local", "Bairro", "Cidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbLocacoes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbLocacoes.setRowHeight(20);
        tbLocacoes.getTableHeader().setReorderingAllowed(false);
        tbLocacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbLocacoesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbLocacoes);
        if (tbLocacoes.getColumnModel().getColumnCount() > 0) {
            tbLocacoes.getColumnModel().getColumn(0).setResizable(false);
            tbLocacoes.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbLocacoes.getColumnModel().getColumn(1).setPreferredWidth(50);
            tbLocacoes.getColumnModel().getColumn(2).setPreferredWidth(350);
            tbLocacoes.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbLocacoes.getColumnModel().getColumn(4).setPreferredWidth(120);
            tbLocacoes.getColumnModel().getColumn(5).setResizable(false);
            tbLocacoes.getColumnModel().getColumn(5).setPreferredWidth(120);
            tbLocacoes.getColumnModel().getColumn(6).setPreferredWidth(100);
            tbLocacoes.getColumnModel().getColumn(9).setPreferredWidth(120);
            tbLocacoes.getColumnModel().getColumn(10).setPreferredWidth(200);
            tbLocacoes.getColumnModel().getColumn(11).setPreferredWidth(200);
            tbLocacoes.getColumnModel().getColumn(12).setPreferredWidth(250);
            tbLocacoes.getColumnModel().getColumn(13).setResizable(false);
            tbLocacoes.getColumnModel().getColumn(13).setPreferredWidth(200);
            tbLocacoes.getColumnModel().getColumn(14).setPreferredWidth(200);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbInf, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbInf)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(145, 182, 182));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lixopdv.png"))); // NOI18N
        jButton9.setText("Cancelar Locação");
        jButton9.setActionCommand("Baixar Títulos");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Manutencaopqno.png"))); // NOI18N
        jButton10.setText("Manutenção de Equipamento");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/locacaopqno.png"))); // NOI18N
        jButton11.setText("          Saida de Equipamento");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11jButton4ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/doclista.png"))); // NOI18N
        jButton12.setText("Impressao Contrato Locacao");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Manutencaopqno.png"))); // NOI18N
        jButton13.setText("Gerar Fatura Periodo");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        btnMarcaTodos.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnMarcaTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Confirma.png"))); // NOI18N
        btnMarcaTodos.setText("Marcar Todos");
        btnMarcaTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcaTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMarcaTodos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMarcaTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton11, jButton9});

        jPanel2.setBackground(new java.awt.Color(219, 227, 227));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Filtros"));

        cbfiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Locado", "Devolvido", "Todos" }));

        txtpesq.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtpesq.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        txtpesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpesqActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Filtrar Por:");

        btnPesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/procura.png"))); // NOI18N
        btnPesq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnPesqFocusGained(evt);
            }
        });
        btnPesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesqActionPerformed(evt);
            }
        });

        ftini.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Inicio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        try {
            ftini.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftini.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftini.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftiniActionPerformed(evt);
            }
        });

        ftfim.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Final", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        try {
            ftfim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfim.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbfiltro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtpesq, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(ftini, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ftfim, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtpesq, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesq))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(83, 83, 83))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1248, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton11jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11jButton4ActionPerformed
      frmSaidaLocacao dialog = new frmSaidaLocacao(new javax.swing.JFrame(), true);
      dialog.iniciaNovo();
      dialog.setLocationRelativeTo(null);
      dialog.setVisible(true);
    }//GEN-LAST:event_jButton11jButton4ActionPerformed

    private void ftiniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftiniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftiniActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        removerLocacao();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        this.realizaImpressaoLocacao(tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_jButton12ActionPerformed

    private void btnPesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesqActionPerformed
     this.buscaDados();
    }//GEN-LAST:event_btnPesqActionPerformed

    private void tbLocacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbLocacoesMouseClicked
       this.retornaItensPorLocacao();
    }//GEN-LAST:event_tbLocacoesMouseClicked

    private void btnPesqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnPesqFocusGained
        buscaDados();
    }//GEN-LAST:event_btnPesqFocusGained

    private void txtpesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpesqActionPerformed
       buscaDados();
    }//GEN-LAST:event_txtpesqActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        chamaFrmGerarFatura();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(clsaux.capturaValores(txtinformado.getText())>0){
            this.informaFinalizadora();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaActionPerformed
        if(pagamentos.size()>0){
            this.gravaPagamentos();

        }else{
            JOptionPane.showMessageDialog(null, "Não Foi Informado Pagamento!!!");
        }

    }//GEN-LAST:event_btnConfirmaActionPerformed

    private void txtinformadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinformadoActionPerformed
        this.informaFinalizadora();
    }//GEN-LAST:event_txtinformadoActionPerformed

    private void btnMarcaTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcaTodosActionPerformed
        DefaultTableModel tb = (DefaultTableModel)tbLocacoes.getModel();
        int tamanho= tb.getRowCount();
        for(int l=0; l<tamanho; l++){
            tb.setValueAt(true, l, 0);
        }
    }//GEN-LAST:event_btnMarcaTodosActionPerformed

    public void inicia(){
         tbLocacoes.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e ){
                if (e.getClickCount()==2){
                   alterarRegistro();
                } 
            }
          
        }); 
         tbMovFatura.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e ){
                if (e.getClickCount()==2){
                  FrmItensFatura dialog = new FrmItensFatura(new javax.swing.JFrame(), true);
                  dialog.setLocationRelativeTo(null);
                  dialog.carregaDados(tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 1).toString(),tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 4).toString());
                  dialog.setVisible(true);
                } 
            }
          
        }); 
         this.listaCliqDireitoMouseItens();
         this.listaCliqDireitoMouseLocacao();
         listaCliqDireitoMouseFatura();
         DefaultComboBoxModel cb = new DefaultComboBoxModel(listaDAO.listapagamento().toArray());
         cbFina.setModel(cb);
         ftini.setText(clsaux.preencheData());
         ftfim.setText(clsaux.preencheData());
         //tbPagamento.getColumnModel().getColumn(3).setCellEditor(new ValidaValorTabela());
    }
    public void listaCliqDireitoMouseItens(){
       
                JPopupMenu menu=new JPopupMenu();
                JMenuItem retornoItem= new JMenuItem("Realizar Retorno Item");
                JMenuItem retornoPorPagamento= new JMenuItem("Receber Valor Item");
                JMenuItem retornoPag= new JMenuItem("Realizar Retorno Item E Receber");
                JMenuItem imprimeSolicRetirada= new JMenuItem("Imprimir Solicitação de Devolução");
                retornoPag.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    if(clsaux.retornaId(tbItensLocacao.getValueAt(tbItensLocacao.getSelectedRow(), 14)).equals("19")){
                         realizaRetornoItemPag();
                         tipoBaixa="2";
                    }else{
                        JOptionPane.showMessageDialog(null, "Item Já Devolvido!!!");
                    }
                }
                });
                imprimeSolicRetirada.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    /*if(clsaux.retornaId(tbItensLocacao.getValueAt(tbItensLocacao.getSelectedRow(), 13)).equals("2")){
                         realizaImpressaoSolicitacaoRetirada(itens.get(tbItensLocacao.getSelectedRow()).getIdlocacao(), itens.get(tbItensLocacao.getSelectedRow()).getIditem());
                    }else{
                        JOptionPane.showMessageDialog(null, "Item Já Devolvido!!!");
                    }*/
                    realizaImpressaoSolicitacaoRetirada(itens.get(tbItensLocacao.getSelectedRow()).getIdlocacao(), itens.get(tbItensLocacao.getSelectedRow()).getIditem());
                }
                });
                retornoPorPagamento.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    String inf=clsaux.retornaId(tbItensLocacao.getValueAt(tbItensLocacao.getSelectedRow(), 14));
                    if(inf.equals("2")||inf.equals("17")){
                         realizaRetornoItemPag();
                         tipoBaixa="1";
                    }else{
                        JOptionPane.showMessageDialog(null, "Item Não Pode Receber Pagamento!!!");
                    }
                   
                }
                });
                retornoItem.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    validaDadosItens();
                }
                });
                menu.add(imprimeSolicRetirada);
                menu.add(retornoItem);
                //menu.add(retornoPag);
                //menu.add(retornoPorPagamento);
                CriaMenuOpcoes.listaCliqDireitoMouse(tbItensLocacao, menu);
     }
    public void listaCliqDireitoMouseLocacao(){
                JPopupMenu menu=new JPopupMenu();
                JMenuItem imprimeTermica= new JMenuItem("Realiza Retono Locacao");
                JMenuItem solicitaImpressao= new JMenuItem("Imprime Solicitacao Devolucao De Toda Locação");
                JMenuItem solicitaImpressaoFatura= new JMenuItem("Imprime Fatura");
                JMenuItem solicitaImpressaoFaturaPeriodo= new JMenuItem("Gerar Fatura Por Periodo");
                imprimeTermica.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    if(tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 9).toString().equals("Locado")){
                        tipoBaixa="3";
                        realizaRetornoLocacao();
                    }else{
                        JOptionPane.showMessageDialog(null, "Atenção Locação Já Foi Retornada!!!");
                    }
                    
                }
                });
                solicitaImpressaoFatura.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                   realizaImpressaoRecibo(tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString());
                }
                });
                solicitaImpressao.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    realizaImpressaoSolicitacaoRetirada(tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString(), "0");
                }
                });
                solicitaImpressaoFaturaPeriodo.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                   //gera fatura por periodo
                   chamaFrmGerarFatura();
                }
                });
                menu.add(imprimeTermica);
                menu.add(solicitaImpressao);
                //menu.add(solicitaImpressaoFatura);
                menu.add(solicitaImpressaoFaturaPeriodo);
                CriaMenuOpcoes.listaCliqDireitoMouse(tbLocacoes, menu);
     }
    public void listaCliqDireitoMouseFatura(){
                JPopupMenu menu=new JPopupMenu();
                JMenuItem imprimeFatura= new JMenuItem("Imprimir Fatura Selecionada");
                JMenuItem ReceberFatura= new JMenuItem("Receber Fatura Selecionada");
                JMenuItem imprimeRecibo= new JMenuItem("Imprimir Fatura Recibo");
                 JMenuItem removerFatura= new JMenuItem("Excluir Fatura Selecionada");
                imprimeFatura.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    realizaImpressaoFatura(tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 1).toString());
                }
                });
                imprimeRecibo.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    realizaImpressaoFaturaPaga(tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 1).toString());
                }
                });
                ReceberFatura.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    /*if(tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 4).toString().equals("N")){
                        realizaPagamentoFatura(tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 1).toString(), tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 3).toString());
                        tipoBaixa="4";
                        fatura=listapag.get(tbMovFatura.getSelectedRow());
                        1
                    }else{
                        JOptionPane.showMessageDialog(null, "Fatura Já Recebida!!!");
                    */
                    tipoBaixa="4";
                    realizaPagamentoFatura();
                    
                }
                });
                removerFatura.addActionListener(new java.awt.event.ActionListener(){
                public void actionPerformed(ActionEvent e ){
                    int yn= JOptionPane.showConfirmDialog(null, "Deseja Remover Fatura", "Cancelamento De Fatura!!!", JOptionPane.YES_NO_OPTION);
                            if (yn== JOptionPane.YES_OPTION){
                                        dao.removeFaturaComHistorico(tbMovFatura.getValueAt(tbMovFatura.getSelectedRow(), 1).toString());
                     }
                }
                });
                menu.add(imprimeFatura);
                menu.add(ReceberFatura);
                menu.add(imprimeRecibo);
                menu.add(removerFatura);
                CriaMenuOpcoes.listaCliqDireitoMouse(tbMovFatura, menu);
     }
    
    
    public void validaDadosItens(){
        List<Titens_locacao> itensLoc=new ArrayList<>();
        int tam=tbItensLocacao.getRowCount();
        for(int i=0; i< tam; i++){
            if((Boolean)tbItensLocacao.getValueAt(i, 0)&& clsaux.retornaId(tbItensLocacao.getValueAt(i, 14)).equals("19")){
                itensLoc.add(itens.get(i));
            }
        }
        if(itensLoc.size()>0){
             frmLocacaoConfereDataRetorno dialog = new frmLocacaoConfereDataRetorno(new javax.swing.JFrame(), true);
                        dialog.receberDados(itensLoc);
                        dialog.setLocationRelativeTo(null);
                        dialog.setVisible(true);
        }
    }
    
    public void chamaFrmGerarFatura(){
         List<String> lista=new ArrayList<>();
         for(int i=0; i<tbLocacoes.getRowCount();i++){
             if((Boolean)tbLocacoes.getValueAt(i, 0)){
                 lista.add(tbLocacoes.getValueAt(i, 1).toString());
             }
         }
         frmLocacaoConfereDataFatura dialog = new frmLocacaoConfereDataFatura(new javax.swing.JFrame(), true);
         dialog.setLocationRelativeTo(null);
         dialog.receberDados(lista);
         dialog.setVisible(true);
         
    }
    
    public void buscaDados(){
        try {
            String filtro=cbfiltro.getSelectedItem().toString();
            String sql="";
            Date dtinicio,datafim=null;
            dtinicio=clsaux.retornaData(ftini.getText());
            datafim=clsaux.retornaData(ftfim.getText());
            String campo= txtpesq.getText();
            if(filtro.equals("Todos")){
                sql="select tl.id,tp.razao_social,tl.data,tl.data_retirou,tl.data_prevista_devolucao,tl.total,\n" +
                        "  tpo.descricao,tl.responsavel,tl.fone,tl.local,tl.bairro,tl.cidade,tl.subtotal,tl.faturado\n" +
                        "  from tlocacao tl\n" +
                        "left join tparceiros tp on tl.parceiro=tp.idparceiro\n" +
                        "left join testado_operacoes tpo on tpo.id=tl.estado where tl.estado>3 order by 1 desc";
            }else if(filtro.equals("Devolvido")){
                sql="select tl.id,tp.razao_social,tl.data,tl.data_retirou,tl.data_prevista_devolucao,tl.total,\n" +
                        "  tpo.descricao,tl.responsavel,tl.fone,tl.local,tl.bairro,tl.cidade,tl.subtotal,tl.faturado\n" +
                        "  from tlocacao tl\n" +
                        "left join tparceiros tp on tl.parceiro=tp.idparceiro\n" +
                        "left join testado_operacoes tpo on tpo.id=tl.estado \n"
                        + "where tl.data_devolucao between '"+dtinicio+"' and '"+datafim+"' and tp.razao_social like '%"+campo+"%' order by 1 desc";
            }else if (filtro.equals("Locado")){
                sql="select tl.id,tp.razao_social,tl.data,tl.data_retirou,tl.data_prevista_devolucao,tl.total,\n" +
                        "  tpo.descricao,tl.responsavel,tl.fone,tl.local,tl.bairro,tl.cidade,tl.subtotal,tl.faturado\n" +
                        "  from tlocacao tl \n" +
                        "left join tparceiros tp on tl.parceiro=tp.idparceiro\n" +
                        "left join testado_operacoes tpo on tpo.id=tl.estado \n"
                        + "where tl.data_retirou between '"+dtinicio+" 00:01' and '"+datafim+" 23:59' and tp.razao_social like '%"+campo+"%' and tl.estado='19' order by 1 desc";
            }
            System.out.println(sql);
            PreparedStatement ps = conexao.getPreparedStatement(sql);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel tbl= (DefaultTableModel) tbLocacoes.getModel();
            tbl.setNumRows(0);
            while(rs.next()){
                tbl.addRow(new Object []{
                    new Boolean(false),
                    rs.getString(1),
                    rs.getString(2),
                    clsaux.convertDataExib(rs.getString(3)),
                    clsaux.convertDataExib(rs.getString(4)),
                    clsaux.convertDataExib(rs.getString(5)),
                    clsaux.formato(rs.getDouble(13)),
                    clsaux.formato(rs.getDouble(14)),
                    clsaux.formato(rs.getDouble(6)),
                    rs.getString(7),
                    rs.getString(8),
                    rs.getString(9),
                    rs.getString(10),
                    rs.getString(11),
                    rs.getString(12)
                });
                
            }
            rs.close();
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(CRUDlocacoes.class.getName()).log(Level.SEVERE, null, ex);
            Logs.gravarLog.main(ex.getMessage());
        }
    }
    public void retornaItensPorLocacao(){
        String id=tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString();
        loc = dao.retornaLocacao(id);
        itens=dao.retornaItensLocacao(id);
        this.preenchaTabelaItens();
        this.preencheTabelaFatura(id);
        txtinformado.setEditable(false);
        btnConfirma.setEnabled(false);
    }
    public void preenchaTabelaItens(){
        DefaultTableModel tb= (DefaultTableModel) tbItensLocacao.getModel();
        tb.setNumRows(0);
        for(Titens_locacao item:itens){
            String periodo="";
            if(clsaux.trataCampoNulo(item.getDevolucao()).equals("0")){
               periodo=String.valueOf(clsaux.calcularDiferencaDatas(item.getRetirada(), clsaux.preencheData()));
            }else{
                periodo=String.valueOf(clsaux.calcularDiferencaDatas(item.getRetirada(), item.getDevolucao()));
            }
            item.setPermanencia(clsaux.capturaValores(periodo));
            tb.addRow(new Object[]{
                new Boolean(false),
                item.getIditem(),
                item.getCodigoitem(),
                item.getDescricao(),
                clsaux.formato(item.getQntunitaria()),
                item.getTipo(),
                clsaux.formato(item.getValor()),
                clsaux.formato(item.getQntpecas()),
                clsaux.formato(item.getTotal()),
                periodo,//clsaux.formato(item.getQnthr()),
                item.getRetirada(),
                item.getDevolucao(),
                clsaux.formato(item.getPago()),
                item.getNumeroserie(),
                item.getEstado()
            });
        }
   }
    public void preencheTabelaFatura(String loca){
        DefaultTableModel tbl= (DefaultTableModel) tbMovFatura.getModel();
        tbl.setNumRows(0);
        listapag = dao.retornaFaturas(loca);
        for(Tfatura_locacao pag:listapag){
            tbl.addRow(new Object[]{
                new Boolean(false),
                 pag.getIdfatura(),
                 pag.getDatagerado(),
                 clsaux.formato(pag.getTotal()),
                 pag.getPago()
            
            });
           
        }
    
    
    
    }
    
    public void gravaMoviFinanceiro(tlocacao_pagamento pag){
        clsDadosPagamentoAdm adm= new clsDadosPagamentoAdm();
        ClsInformaFinanceiro inf= new ClsInformaFinanceiro();
        adm.setDesconto(0.00);
        adm.setDirecao("E");
        adm.setMvto(loc.getId());
        adm.setTipo("Locacao");
        adm.setOrigem(loc.getId());
        adm.setIdtipo("7");
        adm.setVltotal(pag.getValor()-pag.getTroco());
        adm.setParceiro(loc.getParceiro());
        adm.setDataVencimento(clsaux.calcularDataVencimento(30));
        adm.setIdfinalizadora(pag.getIdfinalizadora());
        inf.trataTipoFinanceiro(adm);
    }
    public void alterarRegistro(){
        String id=tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString();
        frmSaidaLocacao.locacao=dao.retornaLocacao(id);
        frmSaidaLocacao dialog = new frmSaidaLocacao(new javax.swing.JFrame(), true);
        dialog.carregaDadosAlterar();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }
    
    public void removerLocacao(){
        int yn= JOptionPane.showConfirmDialog(null, "Deseja Cancelar O Registro?", "Cancelamento De Registro!!!", JOptionPane.YES_NO_OPTION);
        if (yn== JOptionPane.YES_OPTION){
            String id = tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString();
            LocacaoDAO dao = new LocacaoDAO();
            dao.cancelarLocacao(id);
            btnPesq.requestFocus();
        }
    }
    
    
    public void realizaPagamentoFatura(){
        Double valor=0.00;
        int tamanh=tbMovFatura.getRowCount();
        
        for(int i=0; i<tamanh;i++){
            System.out.println("lendo "+(Boolean) tbMovFatura.getValueAt(i, 0));
            if((Boolean) tbMovFatura.getValueAt(i, 0) && tbMovFatura.getValueAt(i,4).toString().equals("N")){
                System.out.println("localizou");
                    fatura.add(listapag.get(i));
                    valor=valor+clsaux.capturaValores(tbMovFatura.getValueAt(i,3).toString());
                    
            }
        }
         txtTotal.setText(clsaux.formato(valor));
         txtinformado.setText(txtTotal.getText());
         tbInf.setSelectedIndex(2);
         txtinformado.setEditable(true);
         btnConfirma.setEnabled(true);
    }
    
    
    
    public void realizaRetornoItemPag(){
        ite=itens.get(tbItensLocacao.getSelectedRow());
        txtlanc.setText(clsaux.formato(ite.getTotal()));
        
        tbInf.setSelectedIndex(1);
        txtinformado.setEditable(true);
        btnConfirma.setEnabled(true);
        /*DefaultTableModel tbl=(DefaultTableModel) tbPagamento.getModel();
        tbl.setNumRows(0);
        tbl.addRow(new Object[]{
            ite.getDescricao(),
            clsaux.formato(ite.getQntdias()),
            clsaux.formato(ite.getPermanencia()),
            clsaux.formato(ite.getPermanencia()*(ite.getQntpecas()*ite.getValor())),
            clsaux.formato(ite.getValor())
        });
        if(ite.getPermanencia()<ite.getQntdias()){
            txtTotal.setText(clsaux.formato(ite.getTotal()));
            txtinformado.setText(clsaux.formato(ite.getTotal()));
        }else{
            txtTotal.setText(clsaux.formato(ite.getPermanencia()*(ite.getQntpecas()*ite.getValor())));
            txtinformado.setText(txtTotal.getText());
        }*/
    }
    
    public String retornaIdsFatura(){
        String ret="";
        for(Tfatura_locacao ft:fatura){
            ret=ret+ft.getIdfatura()+"-";
        }
        return ret;
    }
    
    public void informaFinalizadora(){
        
        Double total= clsaux.capturaValores(txtTotal.getText());
        Double valor= clsaux.capturaValores(txtinformado.getText());
        if(retornaValorPago()>=total){
            JOptionPane.showMessageDialog(null, "Valor Total Recebido!!!");
        }else{
            
        
            Double resto= total-this.retornaValorPago()-valor;
            lista.addElement(clsaux.retornaAposId(cbFina.getSelectedItem().toString())+" R$ "+clsaux.formato(valor));
            listaPagamento.setModel(lista);

            tlocacao_pagamento pg= new tlocacao_pagamento();
            pg.setIdfinalizadora(clsaux.retornaId(cbFina.getSelectedItem()));
            pg.setNomefinalizadora(clsaux.retornaAposId(cbFina.getSelectedItem().toString()));
            pg.setIdlocacao(loc.getId());
            pg.setEstado("2");
            pg.setDatainf(clsaux.retorDataHoraBarra());
            pg.setIdfatura(retornaIdsFatura());
            if(tipoBaixa.equals("3")){
                pg.setReferencia("Ref. a Retorno total da Locacao Data:  "+clsaux.preencheData());
                pg.setTipo("1- Pagamento Parcial Item");
            }else if(tipoBaixa.equals("4")){
                pg.setReferencia("Ref. a Fatura");
                pg.setTipo("2- Pagamento de Fatura");
            }
            else{
                 pg.setReferencia("Ref. item "+ite.getCodigoitem()+" data : "+clsaux.preencheData());
                 pg.setTipo("1- Pagamento Parcial Item");
            }
            
            pg.setValor(valor);
            if(resto<=0){
                lbTroco.setText("Troco R$ "+clsaux.formato(resto*-1));
                pg.setTroco(resto*-1);
            }else{
                lbTroco.setText("Falta R$ "+clsaux.formato(resto));
                pg.setTroco(0.00);
            }
            pagamentos.add(pg);
            txtinformado.setText("");
        }
        
    }
    public Double retornaValorPago(){
        Double ret=0.00;
        for (tlocacao_pagamento pg: pagamentos){
            ret=ret+(pg.getValor()-pg.getTroco());
        }
        return ret;
    }
    
    public void realizaRetornoLocacao(){
       // gera uma fatura com o valor total calculado da locacao
       List<String> loca= new ArrayList<>();
       loca.add(tbLocacoes.getValueAt(tbLocacoes.getSelectedRow(), 1).toString());
       new BaseLocacao().geraFatura(loca, clsaux.retorDataHoraBarra());
        for(Titens_locacao it:itens){
                it.setPago(it.getTotal());
                it.setEstado("17");
                it.setDevolucao(clsaux.retorDataHoraBarra());
                dao.inserirItemLocacao(it);
            }
            loc.setEstado("17");
            loc.setDataDev(clsaux.preencheData());
            dao.gravarLocacao(loc);
            this.preencheTabelaFatura(loc.getId());

       tbInf.setSelectedIndex(1);
    }
    
    public void calculaPagamentoAlterado(){
      
    }
    public void gravaPagamentos(){
        for(tlocacao_pagamento pg: pagamentos){
            dao.gravaFinalizadora(pg);
        }
        // vai validar os tipos de pagamento 1-recebimento parcial do item permitindo operador mudar valor a receber
        // 2- devolucao e pagamento do item, 3- baixa da locacao inteira 
        /*if(tipoBaixa.equals("1")){
            ite.setPago(retornaValorPago());
            dao.inserirItemLocacao(ite);
        }else if (tipoBaixa.equals("2")){
            ite.setPago(retornaValorPago());
            ite.setEstado("18");
            ite.setDevolucao(clsaux.retorDataHoraBarra());
            dao.inserirItemLocacao(ite);
        }else if(tipoBaixa.equals("3")){
            for(Titens_locacao it:itens){
                it.setPago(it.getTotal());
                it.setEstado("17");
                it.setDevolucao(clsaux.retorDataHoraBarra());
                dao.inserirItemLocacao(it);
            }
            loc.setEstado("18");
            loc.setDataDev(clsaux.preencheData());
            loc.setAcres(clsaux.capturaValores(txtAcresc.getText()));
            loc.setDesc(clsaux.capturaValores(txtDesconto.getText()));
            loc.setTotal(clsaux.capturaValores(txtTotal.getText()));
            dao.gravarLocacao(loc);
        }else*/ if(tipoBaixa.equals("4")){
            // muda fatura para pago
            for(Tfatura_locacao fat:fatura){
                fat.setPago("S");
                dao.atualizaValorFatura(fat.getIdfatura(), fat.getTotal(), fat.getPago());  
                
            }
            
        }
        this.limparDadosAposPagamento();
        this.preencheTabelaPagamentos(loc.getId());
        this.preenchaTabelaItens();
        /*int yn= JOptionPane.showConfirmDialog(null, "Deseja Imprimir Fatura?", "Impressao De Fatura!!!", JOptionPane.YES_NO_OPTION);
        if (yn== JOptionPane.YES_OPTION){
            realizaImpressaoRecibo(loc.getId());
        }*/
        btnPesq.requestFocus();
        tbInf.setSelectedIndex(0);
            
    }
    public void limparDadosAposPagamento(){
        txtlanc.setText(clsaux.formato(0.00));
        txtTotal.setText(clsaux.formato(0.00));
        txtinformado.setText(clsaux.formato(0.00));
        lista.clear();
        listaPagamento.setModel(lista);
        pagamentos.clear();
        
    }
    
    
     public void preencheTabelaPagamentos(String loca){
        List<tlocacao_pagamento> listapag= dao.retornaPagamentos(loca);
        for(tlocacao_pagamento pag:listapag){
           gravaMoviFinanceiro(pag);
        }
    }
   
    
    
    public void realizaImpressaoLocacao(String indice){
        try {
            JDialog viewer = new JDialog(new javax.swing.JFrame(),"Visualização do Relatório", true);
            viewer.setSize(1024,720);
            viewer.setLocationRelativeTo(null);
            JasperDesign jd;
            jd = JRXmlLoader.load(".\\relatorios\\locacao\\ImpContratoLocacao.jrxml");
            JasperReport jr= JasperCompileManager.compileReport(jd);
            String sqlitens="select  tp.codigoitem as codigo,\n" +
"                                    tp.descricao as nomelongo,\n" +
"                                    tp.valor as vl_unit,\n" +
"                                    tp.qnt_unitaria as qnt,\n" +
"                                    tp.total as total,tipolocacao\n" +
"                             from titens_locacao tp\n" +
"                            where tp.idlocacao='"+indice+"' and tp.estado<>'3'";
            String sqldadoscond="    select tv.total,\n" +
"                                   tv.data_retirou,\n" +
"                                   tp.cnpj,\n" +
"                                   tp.razao_social,\n" +
"                                   tc.rua,\n" +
"                                   tc.bairro,\n" +
"                                   tc.numero,\n" +
"                                   tc.cidade,\n" +
"                                   tc.estado,\n" +
"                                   iif(tv.data_prevista_devolucao is null, '',tv.data_prevista_devolucao) dat_ent,\n" +
"                                   tv.responsavel,\n" +
"                                   tv.fone\n" +
"                             from tlocacao tv\n" +
"                             join tparceiros tp on tv.parceiro=tp.idparceiro\n" +
"                             join tenderecos tc on tp.idparceiro=tc.id_parceiro\n" +
"                             where tv.id='"+indice+"'";
            PreparedStatement ps=conexao.getPreparedStatementResult(sqldadoscond);
            PreparedStatement pst= conexao.getPreparedStatement(sqlitens);
            ResultSet rs = ps.executeQuery();
            rs.first();
            Map parametros = new HashMap();
            parametros.put("total", clsaux.formato(rs.getDouble(1)));
            parametros.put("cliDataEnt", clsaux.convertDataHoraExib(rs.getString(2)));
            parametros.put("cliCpf", rs.getString(3));
            parametros.put("cliNome", rs.getString(4));
            parametros.put("cliRua", rs.getString(5));
            parametros.put("cliBairro", rs.getString(6));
            parametros.put("cliNum", rs.getString(7));
            parametros.put("cliCidadeEstado", rs.getString(8)+"/"+rs.getString(9));
            parametros.put("cliDataRet", clsaux.convertDataExib(rs.getString(10)));
            parametros.put("numCondi", indice);
            parametros.put("cliResponsavel", rs.getString(11));
            parametros.put("cliFone", rs.getString(12));
            parametros.put("formapgto", "");
            parametros.put("RAZAO_SOCIAL", clsDadosEmpresa.getRazao());
            parametros.put("RUA", clsDadosEmpresa.getRua());
            parametros.put("NUMERO", clsDadosEmpresa.getNumero());
            parametros.put("BAIRRO", clsDadosEmpresa.getBairro());
            parametros.put("CEP", clsDadosEmpresa.getCep());
            parametros.put("CIDADE", clsDadosEmpresa.getCidade());
            parametros.put("UF", clsDadosEmpresa.getEstado());
            parametros.put("FONE", clsDadosEmpresa.getFone());
            rs.close();
            rs = pst.executeQuery();
            JRResultSetDataSource jrds= new JRResultSetDataSource(rs);
            JasperPrint impre= JasperFillManager.fillReport(jr, parametros, jrds);
            JasperViewer jv = new JasperViewer(impre, true);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);   
        } catch (JRException ex) {
            Logs.gravarLog.main(ex.getMessage());
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
             Logs.gravarLog.main(ex.getMessage());
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    public void realizaImpressaoSolicitacaoRetirada(String indice,String indiceitem ){
        try {
            JDialog viewer = new JDialog(new javax.swing.JFrame(),"Visualização do Relatório", true);
            viewer.setSize(1024,720);
            viewer.setLocationRelativeTo(null);
            JasperDesign jd;
            jd = JRXmlLoader.load(".\\relatorios\\locacao\\ImpSolicitacaoRetirada.jrxml");
            JasperReport jr= JasperCompileManager.compileReport(jd);
            String sqlitens="";
            if(indiceitem.equals("0")){
                sqlitens="select  tp.codigoitem as codigo,\n" +
"                                    tp.descricao as nomelongo,\n" +
"                                    tp.valor as vl_unit,\n" +
"                                    tp.data_retirada as locacao,"
                    + "              tp.qnt_unitaria as qnt,\n" +
"                                    tp.total as total,tp.tipolocacao  as tipo, tp.qnt_pecas as pecas,\n"
                    + "              tp.data_retirada as dataretirada, tp.data_devolucao as datadev  \n" +
"                             from titens_locacao tp\n" +
"                            where tp.idlocacao='"+indice+"' and tp.estado='19'";
            }else{
                sqlitens="select  tp.codigoitem as codigo,\n" +
"                                    tp.descricao as nomelongo,\n" +
"                                    tp.valor as vl_unit,\n" +
"                                    tp.data_retirada as locacao,"
                    + "              tp.qnt_unitaria as qnt,\n" +
"                                    tp.total as total,tp.tipolocacao  as tipo, tp.qnt_pecas as pecas,\n"
                    + "              tp.data_retirada as dataretirada, tp.data_devolucao as datadev  \n" +
"                             from titens_locacao tp\n" +
"                            where tp.idlocacao='"+indice+"' and tp.iditem='"+indiceitem+"'";
            }
            String sqldadoscond="    select tv.total,\n" +
"                                   tv.data,\n" +
"                                   tp.cnpj,\n" +
"                                   tp.razao_social,\n" +
"                                   tc.rua,\n" +
"                                   tc.bairro,\n" +
"                                   tc.numero,\n" +
"                                   tc.cidade,\n" +
"                                   tc.estado,\n" +
"                                   iif(tv.data_retirou is null, '',tv.data_retirou) dat_ent,\n" +
"                                   tv.responsavel,\n" +
"                                   tv.fone\n" +
"                             from tlocacao tv\n" +
"                             join tparceiros tp on tv.parceiro=tp.idparceiro\n" +
"                             join tenderecos tc on tp.idparceiro=tc.id_parceiro\n" +
"                             where tv.id='"+indice+"'";
            PreparedStatement ps=conexao.getPreparedStatementResult(sqldadoscond);
            PreparedStatement pst= conexao.getPreparedStatement(sqlitens);
            ResultSet rs = ps.executeQuery();
            rs.first();
            Map parametros = new HashMap();
            parametros.put("total", clsaux.formato(rs.getDouble(1)));
            parametros.put("cliDataEnt", clsaux.convertDataExib(rs.getString(2)));
            parametros.put("cliCpf", rs.getString(3));
            parametros.put("cliNome", rs.getString(4));
            parametros.put("cliRua", rs.getString(5));
            parametros.put("cliBairro", rs.getString(6));
            parametros.put("cliNum", rs.getString(7));
            parametros.put("cliCidadeEstado", rs.getString(8)+"/"+rs.getString(9));
            parametros.put("cliDataRet", rs.getString(10));
            parametros.put("numCondi", indice);
            parametros.put("cliResponsavel", rs.getString(11));
            parametros.put("cliFone", rs.getString(12));
            parametros.put("formapgto", "");
            parametros.put("RAZAO_SOCIAL", clsDadosEmpresa.getRazao());
            parametros.put("RUA", clsDadosEmpresa.getRua());
            parametros.put("NUMERO", clsDadosEmpresa.getNumero());
            parametros.put("BAIRRO", clsDadosEmpresa.getBairro());
            parametros.put("CEP", clsDadosEmpresa.getCep());
            parametros.put("CIDADE", clsDadosEmpresa.getCidade());
            parametros.put("UF", clsDadosEmpresa.getEstado());
            parametros.put("FONE", clsDadosEmpresa.getFone());
            
            rs.close();
            rs = pst.executeQuery();
            JRResultSetDataSource jrds= new JRResultSetDataSource(rs);
            JasperPrint impre= JasperFillManager.fillReport(jr, parametros, jrds);
            JasperViewer jv = new JasperViewer(impre, true);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);   
        } catch (JRException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    public void realizaImpressaoRecibo(String indice){
        try {
            JDialog viewer = new JDialog(new javax.swing.JFrame(),"Visualização do Relatório", true);
            viewer.setSize(1024,720);
            viewer.setLocationRelativeTo(null);
            JasperDesign jd;
            jd = JRXmlLoader.load(".\\relatorios\\locacao\\ImpFatura.jrxml");
            JasperReport jr= JasperCompileManager.compileReport(jd);
            String sqlitens="select  tp.codigoitem as codigo,\n" +
"                                    tp.descricao as nomelongo,\n" +
"                                    tp.valor as vl_unit,\n" +
"                                    tp.data_retirada as locacao,"
                    + "              tp.qnt_unitaria as qnt,\n" +
"                                    tp.total as total,tp.tipolocacao  as tipo, tp.qnt_pecas as pecas,\n"
                    + "              tp.data_retirada as dataretirada, tp.data_devolucao as datadev  \n" +
"                             from titens_locacao tp\n" +
"                            where tp.idlocacao='"+indice+"' and tp.estado<>'3'";
            String sqldadoscond="    select tv.total,\n" +
"                                   tv.data,\n" +
"                                   tp.cnpj,\n" +
"                                   tp.razao_social,\n" +
"                                   tc.rua,\n" +
"                                   tc.bairro,\n" +
"                                   tc.numero,\n" +
"                                   tc.cidade,\n" +
"                                   tc.estado,\n" +
"                                   iif(tv.data_retirou is null, '',tv.data_retirou) dat_ent,\n" +
"                                   tv.responsavel,\n" +
"                                   tv.fone\n" +
"                             from tlocacao tv\n" +
"                             join tparceiros tp on tv.parceiro=tp.idparceiro\n" +
"                             join tenderecos tc on tp.idparceiro=tc.id_parceiro\n" +
"                             where tv.id='"+indice+"'";
            PreparedStatement ps=conexao.getPreparedStatementResult(sqldadoscond);
            PreparedStatement pst= conexao.getPreparedStatement(sqlitens);
            ResultSet rs = ps.executeQuery();
            rs.first();
            Map parametros = new HashMap();
            parametros.put("total", rs.getDouble(1));
            parametros.put("cliDataEnt", clsaux.convertDataExib(rs.getString(2)));
            parametros.put("cliCpf", rs.getString(3));
            parametros.put("cliNome", rs.getString(4));
            parametros.put("cliRua", rs.getString(5));
            parametros.put("cliBairro", rs.getString(6));
            parametros.put("cliNum", rs.getString(7));
            parametros.put("cliCidadeEstado", rs.getString(8)+"/"+rs.getString(9));
            parametros.put("cliDataRet", rs.getString(10));
            parametros.put("numCondi", indice);
            parametros.put("cliResponsavel", rs.getString(11));
            parametros.put("cliFone", rs.getString(12));
            parametros.put("formapgto", "");
            parametros.put("RAZAO_SOCIAL", clsDadosEmpresa.getRazao());
            parametros.put("RUA", clsDadosEmpresa.getRua());
            parametros.put("NUMERO", clsDadosEmpresa.getNumero());
            parametros.put("BAIRRO", clsDadosEmpresa.getBairro());
            parametros.put("CEP", clsDadosEmpresa.getCep());
            parametros.put("CIDADE", clsDadosEmpresa.getCidade());
            parametros.put("UF", clsDadosEmpresa.getEstado());
            parametros.put("FONE", clsDadosEmpresa.getFone());
            parametros.put("REPORT_CONNECTION", conexao.getConexaoRelatorio());
            rs.close();
            rs = pst.executeQuery();
            JRResultSetDataSource jrds= new JRResultSetDataSource(rs);
            JasperPrint impre= JasperFillManager.fillReport(jr, parametros, jrds);
            JasperViewer jv = new JasperViewer(impre, true);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);   
        } catch (JRException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    
     public void realizaImpressaoFatura(String indice){
        try {
            JDialog viewer = new JDialog(new javax.swing.JFrame(),"Visualização do Relatório", true);
            viewer.setSize(1024,720);
            viewer.setLocationRelativeTo(null);
            JasperDesign jd;
            jd = JRXmlLoader.load(".\\relatorios\\locacao\\ImpFatura.jrxml");
            JasperReport jr= JasperCompileManager.compileReport(jd);
            String sqlitens="select  tp.barras_item as codigo,\n" +
"                                    ti.descricao as nomelongo,\n" +
"                                    tp.valor as vl_unit,\n" +
"                                    ti.data_retirada as locacao,\n" +
"                                    tp.periodo as qnt,\n" +
"                                    tp.total as total,tp.tipocobranca  as tipo, ti.qnt_pecas as pecas,\n" +
"                                    tp.datainicio as dataretirada, tp.datafim as datadev\n" +
"                             from torigem_fatura tp\n" +
"                             join titens_locacao ti on ti.idlocacao=tp.idlocacao and ti.iditem=tp.iditem \n" +
"                             where tp.idfatura='"+indice+"'";
            String sqldadoscond="   select first 1 tl.total,\n" +
"                                   tv.data,\n" +
"                                   tp.cnpj,\n" +
"                                   tp.razao_social,\n" +
"                                   tc.rua,\n" +
"                                   tc.bairro,\n" +
"                                   tc.numero,\n" +
"                                   tc.cidade,\n" +
"                                   tc.estado,\n" +
"                                   iif(tv.data_retirou is null, '',tv.data_retirou) dat_ent,\n" +
"                                   tv.responsavel,\n" +
"                                   tv.fone,tv.id\n" +
"                             from tlocacao tv\n" +
"                             join tparceiros tp on tv.parceiro=tp.idparceiro\n" +
"                             join tenderecos tc on tp.idparceiro=tc.id_parceiro\n" +
"                             join tlink_fatura tf on tf.idlocacao=tv.id\n" +
"                             join tfatura_locacao tl on tf.idfatura=tl.id\n" +
"                             where tf.idfatura='"+indice+"' order by tv.id asc";
            PreparedStatement ps=conexao.getPreparedStatementResult(sqldadoscond);
            PreparedStatement pst= conexao.getPreparedStatement(sqlitens);
            ResultSet rs = ps.executeQuery();
            rs.first();
            Map parametros = new HashMap();
            parametros.put("total", rs.getDouble(1));
            parametros.put("cliDataEnt", clsaux.convertDataExib(rs.getString(2)));
            parametros.put("cliCpf", rs.getString(3));
            parametros.put("cliNome", rs.getString(4));
            parametros.put("cliRua", rs.getString(5));
            parametros.put("cliBairro", rs.getString(6));
            parametros.put("cliNum", rs.getString(7));
            parametros.put("cliCidadeEstado", rs.getString(8)+"/"+rs.getString(9));
            parametros.put("cliDataRet", rs.getString(10));
            parametros.put("numCondi", indice);
            parametros.put("locacao", rs.getString(13));
            parametros.put("cliResponsavel", rs.getString(11));
            parametros.put("cliFone", rs.getString(12));
            parametros.put("formapgto", "");
            parametros.put("RAZAO_SOCIAL", clsDadosEmpresa.getRazao());
            parametros.put("RUA", clsDadosEmpresa.getRua());
            parametros.put("NUMERO", clsDadosEmpresa.getNumero());
            parametros.put("BAIRRO", clsDadosEmpresa.getBairro());
            parametros.put("CEP", clsDadosEmpresa.getCep());
            parametros.put("CIDADE", clsDadosEmpresa.getCidade());
            parametros.put("UF", clsDadosEmpresa.getEstado());
            parametros.put("FONE", clsDadosEmpresa.getFone());
            parametros.put("REPORT_CONNECTION", conexao.getConexaoRelatorio());
            rs.close();
            rs = pst.executeQuery();
            JRResultSetDataSource jrds= new JRResultSetDataSource(rs);
            JasperPrint impre= JasperFillManager.fillReport(jr, parametros, jrds);
            JasperViewer jv = new JasperViewer(impre, true);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);   
        } catch (JRException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
      public void realizaImpressaoFaturaPaga(String indice){
        try {
            JDialog viewer = new JDialog(new javax.swing.JFrame(),"Visualização do Relatório", true);
            viewer.setSize(1024,720);
            viewer.setLocationRelativeTo(null);
            JasperDesign jd;
            jd = JRXmlLoader.load(".\\relatorios\\locacao\\ImpFaturaPaga.jrxml");
            JasperReport jr= JasperCompileManager.compileReport(jd);
            String sqlitens="select  tp.barras_item as codigo,\n" +
"                                    ti.descricao as nomelongo,\n" +
"                                    tp.valor as vl_unit,\n" +
"                                    ti.data_retirada as locacao,\n" +
"                                    tp.periodo as qnt,\n" +
"                                    tp.total as total,tp.tipocobranca  as tipo, ti.qnt_pecas as pecas,\n" +
"                                    tp.datainicio as dataretirada, tp.datafim as datadev, tp.idfatura as fatura \n" +
"                             from torigem_fatura tp\n" +
"                             join titens_locacao ti on ti.idlocacao=tp.idlocacao and ti.iditem=tp.iditem \n" +
"                             where tp.idfatura='"+indice+"'";
            String sqldadoscond="   select first 1 tl.total,\n" +
"                                   tv.data,\n" +
"                                   tp.cnpj,\n" +
"                                   tp.razao_social,\n" +
"                                   tc.rua,\n" +
"                                   tc.bairro,\n" +
"                                   tc.numero,\n" +
"                                   tc.cidade,\n" +
"                                   tc.estado,\n" +
"                                   iif(tv.data_retirou is null, '',tv.data_retirou) dat_ent,\n" +
"                                   tv.responsavel,\n" +
"                                   tv.fone, (select first 1 t2.idfatura t2 from tlocacao_pagamento t2 where t2.idlocacao=tv.id) \n" +
"                             from tlocacao tv\n" +
"                             join tparceiros tp on tv.parceiro=tp.idparceiro\n" +
"                             join tenderecos tc on tp.idparceiro=tc.id_parceiro\n" +
"                             join tlink_fatura tf on tf.idlocacao=tv.id\n" +
"                             join tfatura_locacao tl on tf.idfatura=tl.id\n" +
"                             where tf.idfatura='"+indice+"' order by tv.id asc";
            PreparedStatement ps=conexao.getPreparedStatementResult(sqldadoscond);
            PreparedStatement pst= conexao.getPreparedStatement(sqlitens);
            ResultSet rs = ps.executeQuery();
            rs.first();
            Map parametros = new HashMap();
            parametros.put("total", rs.getDouble(1));
            parametros.put("cliDataEnt", clsaux.convertDataExib(rs.getString(2)));
            parametros.put("cliCpf", rs.getString(3));
            parametros.put("cliNome", rs.getString(4));
            parametros.put("cliRua", rs.getString(5));
            parametros.put("cliBairro", rs.getString(6));
            parametros.put("cliNum", rs.getString(7));
            parametros.put("cliCidadeEstado", rs.getString(8)+"/"+rs.getString(9));
            parametros.put("cliDataRet", rs.getString(10));
            parametros.put("numCondi", indice);
            parametros.put("cliResponsavel", rs.getString(11));
            parametros.put("cliFone", rs.getString(12));
            parametros.put("formapgto", "");
            parametros.put("faturas", rs.getString(13));
            parametros.put("RAZAO_SOCIAL", clsDadosEmpresa.getRazao());
            parametros.put("RUA", clsDadosEmpresa.getRua());
            parametros.put("NUMERO", clsDadosEmpresa.getNumero());
            parametros.put("BAIRRO", clsDadosEmpresa.getBairro());
            parametros.put("CEP", clsDadosEmpresa.getCep());
            parametros.put("CIDADE", clsDadosEmpresa.getCidade());
            parametros.put("UF", clsDadosEmpresa.getEstado());
            parametros.put("FONE", clsDadosEmpresa.getFone());
            parametros.put("REPORT_CONNECTION", conexao.getConexaoRelatorio());
            rs.close();
            rs = pst.executeQuery();
            JRResultSetDataSource jrds= new JRResultSetDataSource(rs);
            JasperPrint impre= JasperFillManager.fillReport(jr, parametros, jrds);
            JasperViewer jv = new JasperViewer(impre, true);
            viewer.getContentPane().add(jv.getContentPane());
            viewer.setVisible(true);   
        } catch (JRException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CRUDCondicional.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDlocacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDlocacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDlocacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDlocacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CRUDlocacoes dialog = new CRUDlocacoes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirma;
    private javax.swing.JButton btnMarcaTodos;
    public static javax.swing.JButton btnPesq;
    private javax.swing.JComboBox<String> cbFina;
    private javax.swing.JComboBox<String> cbfiltro;
    private javax.swing.JFormattedTextField ftfim;
    private javax.swing.JFormattedTextField ftini;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbTroco;
    private javax.swing.JList<String> listaPagamento;
    private javax.swing.JTabbedPane tbInf;
    private javax.swing.JTable tbItensLocacao;
    private javax.swing.JTable tbLocacoes;
    private javax.swing.JTable tbMovFatura;
    private javax.swing.JTextField txtAcresc;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtValorPago;
    private javax.swing.JTextField txtcalc;
    private javax.swing.JTextField txtinformado;
    private javax.swing.JTextField txtlanc;
    private javax.swing.JTextField txtpesq;
    // End of variables declaration//GEN-END:variables
}
